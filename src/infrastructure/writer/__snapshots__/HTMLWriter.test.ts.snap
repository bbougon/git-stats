// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HTML writer should generate an HTML report file for merged requests 1`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Report Friday, February 11, 2022 to Thursday, February 17, 2022</title>
    <link href="style.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
  </head>
  <body>
    <div>
      <h2>Merged events for period Friday, February 11, 2022 to Thursday, February 17, 2022</h2>
      <div class="container-sm text-left">
        <h3>Aggregated Statistics</h3>
        <div class="row">
          <div class="col-lg-10 text-secondary">
            <div class="row">
              <div class="col-sm-12 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title">0 months, 2 days, 3 hours, 20 minutes, 0 seconds</h5>
                    <p class="card-text"><em>Average time to merge</em></p>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-merged">3</h5>
                    <p class="card-text"><em># Merged</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-opened">0</h5>
                    <p class="card-text"><em># Opened</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-closed">0</h5>
                    <p class="card-text"><em># Closed</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-total">3</h5>
                    <p class="card-text"><em># Overall</em></p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-lg-2">
            <div class="row">
              <div>
                <canvas id="aggregated-statistics"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="container-sm">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="months-tab" data-bs-toggle="tab" data-bs-target="#months-tab-pane" type="button" role="tab" aria-controls="months-tab-pane" aria-selected="true">
              <h5>Months</h5>
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="weeks-tab" data-bs-toggle="tab" data-bs-target="#weeks-tab-pane" type="button" role="tab" aria-controls="weeks-tab-pane" aria-selected="false">
              <h5>Weeks</h5>
            </button>
          </li>
        </ul>
        <div class="tab-content" id="periodTabContent">
          <div class="tab-pane fade show active" id="months-tab-pane" role="tabpanel" aria-labelledby="months-tab" tabindex="0">
            <div id="months">
              <div class="container-sm">
                <div class="row">
                  <div class="col-lg-6">
                    <canvas id="merged-events-months-histogram"></canvas>
                  </div>
                  <div class="col-lg-6">
                    <canvas id="merged-events-months-avg-med"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="tab-pane fade" id="weeks-tab-pane" role="tabpanel" aria-labelledby="weeks-tab" tabindex="0">
            <div id="weeks">
              <div class="container-sm">
                <div class="row">
                  <div class="col-lg-6">
                    <canvas id="merged-events-weeks-histogram"></canvas>
                  </div>
                  <div class="col-lg-6">
                    <canvas id="merged-events-weeks-avg-med"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
      function initializeHistogramDataSet(mergeEventsFlows) {
          return [
              {
              label: '# of merged events',
              data: mergeEventsFlows,
              yAxisID: 'y',
              barPercentage: 1.24,
          }
          ];
      }
      
      
      function initializeLinearDataSet(averageData, medianData) {
          return [
              {
                  label: 'Average time to merge',
                  data: averageData,
                  borderWidth: 3,
                  borderJoinStyle: "round",
                  tension: 0.2,
                  yAxisID: 'y',
              },
              {
                  label: 'Median time to merge',
                  data: medianData,
                  borderWidth: 3,
                  borderJoinStyle: "round",
                  tension: 0.2,
                  yAxisID: 'y',
              }
          ];
      }
      
      const options = {
          scales: {
              y: {
                  display: true,
                  position: 'left',
                  ticks: {
                      beginAtZero: true,
                      callback: function (value, index, ticks) {
                          const duration = moment.duration(parseInt(value), "hours");
                          return 2 > 0 || 0 > 0 ? Math.round(duration.asDays()) + " day(s)" : Math.round(duration.asHours()) + " hours(s)";
                      }
                  }
              },
          },
          plugins: {
              tooltip: {
                  callbacks: {
                      label: function (context) {
                          let label = context.dataset.label || '';
      
                          if (label) {
                              label += ': ';
                          }
                          if (context.parsed.y !== null) {
                              const duration = moment.duration(parseInt(context.parsed.y), "hours");
                              label += 2 > 0 || 0 > 0 ? Math.round(duration.asDays()) + " day(s)" : Math.round(duration.asHours()) + " hours(s)";
                          }
                          return label
                      },
                  }
              }
          }
      }
      
      const monthsMergedEventsHistogramContext = document.getElementById('merged-events-months-histogram');
      const monthsMergedEventsHistogramDatasets = initializeHistogramDataSet([3]);
      const monthsMergedEventsAvgAndMedContext = document.getElementById('merged-events-months-avg-med');
      const monthsMergedEventsAvgAndMedDatasets = initializeLinearDataSet([51.333333333333336], [71]);
      const monthsMergedEventsLabels = ["Feb"]
      
      const weeksMergedEventsHistogramContext = document.getElementById('merged-events-weeks-histogram');
      const weeksMergedEventsHistogramDatasets = initializeHistogramDataSet([1,2]);
      const weeksMergedEventsAvgAndMedContext = document.getElementById('merged-events-weeks-avg-med');
      const weeksMergedEventsAvgAndMedDatasets = initializeLinearDataSet([4,75], [4,75]);
      const weeksMergedEventsLabels = ["Week 7","Week 8"]
      
      const aggregatedMergeRequestContext = document.getElementById("aggregated-statistics")
      const aggregatedMergeRequestChartLabels = ['Merged', 'Opened', 'Closed', 'All']
      const aggregatedMergeRequestChartDatasets =    [{
          label: 'Aggregated merge requests',
          data: [
              3,
              0,
              0,
              3
          ],
          hoverOffset: 4
      }]
      
      function renderChart(type, context, labels, datasets, options = {}) {
          new Chart(context, {
              type,
              data: {
                  labels: labels,
                  datasets: datasets,
              },
              options
          });
      }
      
      renderChart('bar', monthsMergedEventsHistogramContext, monthsMergedEventsLabels, monthsMergedEventsHistogramDatasets, {});
      renderChart('line', monthsMergedEventsAvgAndMedContext, monthsMergedEventsLabels, monthsMergedEventsAvgAndMedDatasets, options);
      renderChart('bar', weeksMergedEventsHistogramContext, weeksMergedEventsLabels, weeksMergedEventsHistogramDatasets, {});
      renderChart('line', weeksMergedEventsAvgAndMedContext, weeksMergedEventsLabels, weeksMergedEventsAvgAndMedDatasets, options);
      renderChart('doughnut', aggregatedMergeRequestContext, aggregatedMergeRequestChartLabels, aggregatedMergeRequestChartDatasets, {});
    </script>
  </body>
</html>"
`;

exports[`HTML writer should generate an HTML report file for merged requests when some mr are not yet merged 1`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Report Friday, February 11, 2022 to Thursday, February 17, 2022</title>
    <link href="style.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
  </head>
  <body>
    <div>
      <h2>Merged events for period Friday, February 11, 2022 to Thursday, February 17, 2022</h2>
      <div class="container-sm text-left">
        <h3>Aggregated Statistics</h3>
        <div class="row">
          <div class="col-lg-10 text-secondary">
            <div class="row">
              <div class="col-sm-12 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title">0 months, 3 days, 3 hours, 0 minutes, 0 seconds</h5>
                    <p class="card-text"><em>Average time to merge</em></p>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-merged">2</h5>
                    <p class="card-text"><em># Merged</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-opened">1</h5>
                    <p class="card-text"><em># Opened</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-closed">0</h5>
                    <p class="card-text"><em># Closed</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-total">3</h5>
                    <p class="card-text"><em># Overall</em></p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-lg-2">
            <div class="row">
              <div>
                <canvas id="aggregated-statistics"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="container-sm">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="months-tab" data-bs-toggle="tab" data-bs-target="#months-tab-pane" type="button" role="tab" aria-controls="months-tab-pane" aria-selected="true">
              <h5>Months</h5>
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="weeks-tab" data-bs-toggle="tab" data-bs-target="#weeks-tab-pane" type="button" role="tab" aria-controls="weeks-tab-pane" aria-selected="false">
              <h5>Weeks</h5>
            </button>
          </li>
        </ul>
        <div class="tab-content" id="periodTabContent">
          <div class="tab-pane fade show active" id="months-tab-pane" role="tabpanel" aria-labelledby="months-tab" tabindex="0">
            <div id="months">
              <div class="container-sm">
                <div class="row">
                  <div class="col-lg-6">
                    <canvas id="merged-events-months-histogram"></canvas>
                  </div>
                  <div class="col-lg-6">
                    <canvas id="merged-events-months-avg-med"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="tab-pane fade" id="weeks-tab-pane" role="tabpanel" aria-labelledby="weeks-tab" tabindex="0">
            <div id="weeks">
              <div class="container-sm">
                <div class="row">
                  <div class="col-lg-6">
                    <canvas id="merged-events-weeks-histogram"></canvas>
                  </div>
                  <div class="col-lg-6">
                    <canvas id="merged-events-weeks-avg-med"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
      function initializeHistogramDataSet(mergeEventsFlows) {
          return [
              {
              label: '# of merged events',
              data: mergeEventsFlows,
              yAxisID: 'y',
              barPercentage: 1.24,
          }
          ];
      }
      
      
      function initializeLinearDataSet(averageData, medianData) {
          return [
              {
                  label: 'Average time to merge',
                  data: averageData,
                  borderWidth: 3,
                  borderJoinStyle: "round",
                  tension: 0.2,
                  yAxisID: 'y',
              },
              {
                  label: 'Median time to merge',
                  data: medianData,
                  borderWidth: 3,
                  borderJoinStyle: "round",
                  tension: 0.2,
                  yAxisID: 'y',
              }
          ];
      }
      
      const options = {
          scales: {
              y: {
                  display: true,
                  position: 'left',
                  ticks: {
                      beginAtZero: true,
                      callback: function (value, index, ticks) {
                          const duration = moment.duration(parseInt(value), "hours");
                          return 3 > 0 || 0 > 0 ? Math.round(duration.asDays()) + " day(s)" : Math.round(duration.asHours()) + " hours(s)";
                      }
                  }
              },
          },
          plugins: {
              tooltip: {
                  callbacks: {
                      label: function (context) {
                          let label = context.dataset.label || '';
      
                          if (label) {
                              label += ': ';
                          }
                          if (context.parsed.y !== null) {
                              const duration = moment.duration(parseInt(context.parsed.y), "hours");
                              label += 3 > 0 || 0 > 0 ? Math.round(duration.asDays()) + " day(s)" : Math.round(duration.asHours()) + " hours(s)";
                          }
                          return label
                      },
                  }
              }
          }
      }
      
      const monthsMergedEventsHistogramContext = document.getElementById('merged-events-months-histogram');
      const monthsMergedEventsHistogramDatasets = initializeHistogramDataSet([2]);
      const monthsMergedEventsAvgAndMedContext = document.getElementById('merged-events-months-avg-med');
      const monthsMergedEventsAvgAndMedDatasets = initializeLinearDataSet([75], [75]);
      const monthsMergedEventsLabels = ["Feb"]
      
      const weeksMergedEventsHistogramContext = document.getElementById('merged-events-weeks-histogram');
      const weeksMergedEventsHistogramDatasets = initializeHistogramDataSet([0,2]);
      const weeksMergedEventsAvgAndMedContext = document.getElementById('merged-events-weeks-avg-med');
      const weeksMergedEventsAvgAndMedDatasets = initializeLinearDataSet([0,75], [0,75]);
      const weeksMergedEventsLabels = ["Week 7","Week 8"]
      
      const aggregatedMergeRequestContext = document.getElementById("aggregated-statistics")
      const aggregatedMergeRequestChartLabels = ['Merged', 'Opened', 'Closed', 'All']
      const aggregatedMergeRequestChartDatasets =    [{
          label: 'Aggregated merge requests',
          data: [
              2,
              1,
              0,
              3
          ],
          hoverOffset: 4
      }]
      
      function renderChart(type, context, labels, datasets, options = {}) {
          new Chart(context, {
              type,
              data: {
                  labels: labels,
                  datasets: datasets,
              },
              options
          });
      }
      
      renderChart('bar', monthsMergedEventsHistogramContext, monthsMergedEventsLabels, monthsMergedEventsHistogramDatasets, {});
      renderChart('line', monthsMergedEventsAvgAndMedContext, monthsMergedEventsLabels, monthsMergedEventsAvgAndMedDatasets, options);
      renderChart('bar', weeksMergedEventsHistogramContext, weeksMergedEventsLabels, weeksMergedEventsHistogramDatasets, {});
      renderChart('line', weeksMergedEventsAvgAndMedContext, weeksMergedEventsLabels, weeksMergedEventsAvgAndMedDatasets, options);
      renderChart('doughnut', aggregatedMergeRequestContext, aggregatedMergeRequestChartLabels, aggregatedMergeRequestChartDatasets, {});
    </script>
  </body>
</html>"
`;

exports[`HTML writer should generate an HTML report file with months period 1`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Report Saturday, January 1, 2022 to Wednesday, March 2, 2022</title>
    <link href="style.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
  </head>
  <body>
    <div>
      <h2>Merged events for period Saturday, January 1, 2022 to Wednesday, March 2, 2022</h2>
      <div class="container-sm text-left">
        <h3>Aggregated Statistics</h3>
        <div class="row">
          <div class="col-lg-10 text-secondary">
            <div class="row">
              <div class="col-sm-12 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title">0 months, 7 days, 18 hours, 0 minutes, 0 seconds</h5>
                    <p class="card-text"><em>Average time to merge</em></p>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-merged">3</h5>
                    <p class="card-text"><em># Merged</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-opened">0</h5>
                    <p class="card-text"><em># Opened</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-closed">0</h5>
                    <p class="card-text"><em># Closed</em></p>
                  </div>
                </div>
              </div>
              <div class="col-sm-3 mb-3 mb-sm-0">
                <div class="card mb-3">
                  <div class="card-body text-center">
                    <h5 class="card-title text-total">3</h5>
                    <p class="card-text"><em># Overall</em></p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-lg-2">
            <div class="row">
              <div>
                <canvas id="aggregated-statistics"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="container-sm">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="months-tab" data-bs-toggle="tab" data-bs-target="#months-tab-pane" type="button" role="tab" aria-controls="months-tab-pane" aria-selected="true">
              <h5>Months</h5>
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="weeks-tab" data-bs-toggle="tab" data-bs-target="#weeks-tab-pane" type="button" role="tab" aria-controls="weeks-tab-pane" aria-selected="false">
              <h5>Weeks</h5>
            </button>
          </li>
        </ul>
        <div class="tab-content" id="periodTabContent">
          <div class="tab-pane fade show active" id="months-tab-pane" role="tabpanel" aria-labelledby="months-tab" tabindex="0">
            <div id="months">
              <div class="container-sm">
                <div class="row">
                  <div class="col-lg-6">
                    <canvas id="merged-events-months-histogram"></canvas>
                  </div>
                  <div class="col-lg-6">
                    <canvas id="merged-events-months-avg-med"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="tab-pane fade" id="weeks-tab-pane" role="tabpanel" aria-labelledby="weeks-tab" tabindex="0">
            <div id="weeks">
              <div class="container-sm">
                <div class="row">
                  <div class="col-lg-6">
                    <canvas id="merged-events-weeks-histogram"></canvas>
                  </div>
                  <div class="col-lg-6">
                    <canvas id="merged-events-weeks-avg-med"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
      function initializeHistogramDataSet(mergeEventsFlows) {
          return [
              {
              label: '# of merged events',
              data: mergeEventsFlows,
              yAxisID: 'y',
              barPercentage: 1.24,
          }
          ];
      }
      
      
      function initializeLinearDataSet(averageData, medianData) {
          return [
              {
                  label: 'Average time to merge',
                  data: averageData,
                  borderWidth: 3,
                  borderJoinStyle: "round",
                  tension: 0.2,
                  yAxisID: 'y',
              },
              {
                  label: 'Median time to merge',
                  data: medianData,
                  borderWidth: 3,
                  borderJoinStyle: "round",
                  tension: 0.2,
                  yAxisID: 'y',
              }
          ];
      }
      
      const options = {
          scales: {
              y: {
                  display: true,
                  position: 'left',
                  ticks: {
                      beginAtZero: true,
                      callback: function (value, index, ticks) {
                          const duration = moment.duration(parseInt(value), "hours");
                          return 7 > 0 || 0 > 0 ? Math.round(duration.asDays()) + " day(s)" : Math.round(duration.asHours()) + " hours(s)";
                      }
                  }
              },
          },
          plugins: {
              tooltip: {
                  callbacks: {
                      label: function (context) {
                          let label = context.dataset.label || '';
      
                          if (label) {
                              label += ': ';
                          }
                          if (context.parsed.y !== null) {
                              const duration = moment.duration(parseInt(context.parsed.y), "hours");
                              label += 7 > 0 || 0 > 0 ? Math.round(duration.asDays()) + " day(s)" : Math.round(duration.asHours()) + " hours(s)";
                          }
                          return label
                      },
                  }
              }
          }
      }
      
      const monthsMergedEventsHistogramContext = document.getElementById('merged-events-months-histogram');
      const monthsMergedEventsHistogramDatasets = initializeHistogramDataSet([1,2,0]);
      const monthsMergedEventsAvgAndMedContext = document.getElementById('merged-events-months-avg-med');
      const monthsMergedEventsAvgAndMedDatasets = initializeLinearDataSet([408,75,0], [408,75,0]);
      const monthsMergedEventsLabels = ["Jan","Feb","Mar"]
      
      const weeksMergedEventsHistogramContext = document.getElementById('merged-events-weeks-histogram');
      const weeksMergedEventsHistogramDatasets = initializeHistogramDataSet([0,0,0,0,1,0,0,2,0,0]);
      const weeksMergedEventsAvgAndMedContext = document.getElementById('merged-events-weeks-avg-med');
      const weeksMergedEventsAvgAndMedDatasets = initializeLinearDataSet([0,0,0,0,408,0,0,75,0,0], [0,0,0,0,408,0,0,75,0,0]);
      const weeksMergedEventsLabels = ["Week 1","Week 2","Week 3","Week 4","Week 5","Week 6","Week 7","Week 8","Week 9","Week 10"]
      
      const aggregatedMergeRequestContext = document.getElementById("aggregated-statistics")
      const aggregatedMergeRequestChartLabels = ['Merged', 'Opened', 'Closed', 'All']
      const aggregatedMergeRequestChartDatasets =    [{
          label: 'Aggregated merge requests',
          data: [
              3,
              0,
              0,
              3
          ],
          hoverOffset: 4
      }]
      
      function renderChart(type, context, labels, datasets, options = {}) {
          new Chart(context, {
              type,
              data: {
                  labels: labels,
                  datasets: datasets,
              },
              options
          });
      }
      
      renderChart('bar', monthsMergedEventsHistogramContext, monthsMergedEventsLabels, monthsMergedEventsHistogramDatasets, {});
      renderChart('line', monthsMergedEventsAvgAndMedContext, monthsMergedEventsLabels, monthsMergedEventsAvgAndMedDatasets, options);
      renderChart('bar', weeksMergedEventsHistogramContext, weeksMergedEventsLabels, weeksMergedEventsHistogramDatasets, {});
      renderChart('line', weeksMergedEventsAvgAndMedContext, weeksMergedEventsLabels, weeksMergedEventsAvgAndMedDatasets, options);
      renderChart('doughnut', aggregatedMergeRequestContext, aggregatedMergeRequestChartLabels, aggregatedMergeRequestChartDatasets, {});
    </script>
  </body>
</html>"
`;
