div(class="tab-pane fade ps-4" id="issues-events-tab-pane" role="tabpanel" aria-labelledby="issues-events-tab" tabindex="0")
    h4 Issues events for period #{period.start} to #{period.end}
    div(class='container-sm text-left')
        h3 Aggregated Statistics
        div.row
            div(class='col-lg-10 text-secondary')
                div.row
                    div(class='col-sm-12 mb-3 mb-sm-0')
                        div(class='card mb-3')
                            div(class='card-body text-center')
                                h5.card-title #{stats.issues.average.months} months, #{stats.issues.average.days} days, #{stats.issues.average.hours} hours, #{stats.issues.average.minutes} minutes, #{stats.issues.average.seconds} seconds
                                p.card-text
                                    em Average time to merge
                div.row
                    div(class='col-sm-4 mb-4 mb-sm-0')
                        div(class='card mb-4')
                            div(class='card-body text-center')
                                h5(class='card-title text-opened') #{stats.issues.total.opened}
                                p.card-text
                                    em # Opened
                    div(class='col-sm-4 mb-4 mb-sm-0')
                        div(class='card mb-4')
                            div(class='card-body text-center')
                                h5(class='card-title text-closed') #{stats.issues.total.closed}
                                p.card-text
                                    em # Closed
                    div(class='col-sm-4 mb-4 mb-sm-0')
                        div(class='card mb-4')
                            div(class='card-body text-center')
                                h5(class='card-title text-total') #{stats.issues.total.all}
                                p.card-text
                                    em # Overall
            div.col-lg-2
                div.row
                    div
                        canvas#aggregated-issues-statistics
    div.container-sm
        ul(class="nav nav-tabs" id="issues-period-tab" role="tablist")
            li(class="nav-item" role="presentation")
                button(class="nav-link active" id="issues-months-tab" data-bs-toggle="tab" data-bs-target="#issues-months-tab-pane" type="button" role="tab" aria-controls="issues-months-tab-pane" aria-selected="true")
                    h5 Months
            li(class="nav-item" role="presentation")
                button(class="nav-link" id="issues-weeks-tab" data-bs-toggle="tab" data-bs-target="#issues-weeks-tab-pane" type="button" role="tab" aria-controls="issues-weeks-tab-pane" aria-selected="false")
                    h5 Weeks
        div(class="tab-content" id="issuesPeriodTabContent")
            div(class="tab-pane fade show active" id="issues-months-tab-pane" role="tabpanel" aria-labelledby="issues-months-tab" tabindex="0")
                div#issues-months
                    div(class='container-sm')
                        div.row
                            div(class='col-lg-6')
                                canvas#issue-events-months-histogram
                            div(class='col-lg-6')
                                canvas#issue-events-months-avg-med
                        div.row
                            div(class='col-lg-6')
                                canvas#issues-cumulative-months-stats
            div(class="tab-pane fade" id="issues-weeks-tab-pane" role="tabpanel" aria-labelledby="issues-weeks-tab" tabindex="0")
                div#issues-weeks
                    div(class='container-sm')
                        div.row
                            div(class='col-lg-6')
                                canvas#issue-events-weeks-histogram
                            div(class='col-lg-6')
                                canvas#issue-events-weeks-avg-med
                        div.row
                            div(class='col-lg-6')
                                canvas#issues-cumulative-weeks-stats

script(type='text/javascript').
    const aggregatedIssuesContext = document.getElementById("aggregated-issues-statistics")
    const aggregatedIssuesChartLabels = ['Opened', 'Closed', 'All']
    const aggregatedIssuesChartDatasets = [{
        label: 'Aggregated merge requests',
        data: [
            #{stats.issues.total.opened},
            #{stats.issues.total.closed},
            #{stats.issues.total.all}
        ],
        hoverOffset: 4
    }]

    const monthsCumulativeIssuesContext = document.getElementById('issues-cumulative-months-stats')
    const monthsCumulativeIssuesDatasets = initializeLinearDataSet([
        {data: [#{stats.issues.cumulative.months.openedData}], label: "Cumulative opened issues"},
        {data: [#{stats.issues.cumulative.months.closedData}], label: "Cumulative closed issues"},
        {data: [#{stats.issues.cumulative.months.trendData}], label: "Cumulative trend issues"},
    ])
    const monthsCumulativeIssuesLabels = !{stringify(stats.issues.cumulative.months.labels)}

    const weeksCumulativeIssuesContext = document.getElementById('issues-cumulative-weeks-stats')
    const weeksCumulativeIssuesDatasets = initializeLinearDataSet([
        {data: [#{stats.issues.cumulative.weeks.openedData}], label: "Cumulative opened issues"},
        {data: [#{stats.issues.cumulative.weeks.closedData}], label: "Cumulative closed issues"},
        {data: [#{stats.issues.cumulative.weeks.trendData}], label: "Cumulative trend issues"},
    ])
    const weeksCumulativeIssuesLabels = !{stringify(stats.issues.cumulative.weeks.labels)}

    const monthsIssueEventsHistogramContext = document.getElementById('issue-events-months-histogram');
    const monthsIssueEventsLabels = !{stringify(stats.issues.events.months.labels)};
    const monthsIssueEventsHistogramDatasets = initializeHistogramDataSet({data: [#{stats.issues.events.months.data}], label: '# of issues'});
    const monthsIssueEventsAvgAndMedDatasets = initializeLinearDataSet([{data: [#{stats.issues.events.months.average}], label: "Average time to resolve issues"}, {data: [#{stats.issues.events.months.median}], label: "Median time to resolve issues"}]);
    const monthsIssueEventsAvgAndMedContext = document.getElementById('issue-events-months-avg-med');

    const weeksIssueEventsHistogramContext = document.getElementById('issue-events-weeks-histogram');
    const weeksIssueEventsLabels = !{stringify(stats.issues.events.weeks.labels)};;
    const weeksIssueEventsHistogramDatasets = initializeHistogramDataSet({data: [#{stats.issues.events.weeks.data}], label: '# of issues'});;
    const weeksIssueEventsAvgAndMedDatasets = initializeLinearDataSet([{data: [#{stats.issues.events.weeks.average}], label: "Average time to resolve issues"}, {data: [#{stats.issues.events.weeks.median}], label: "Median time to resolve issues"}]);
    const weeksIssueEventsAvgAndMedContext = document.getElementById('issue-events-weeks-avg-med');

    renderChart('bar', monthsIssueEventsHistogramContext, monthsIssueEventsLabels, monthsIssueEventsHistogramDatasets, {});
    renderChart('line', monthsIssueEventsAvgAndMedContext, monthsIssueEventsLabels, monthsIssueEventsAvgAndMedDatasets, options);
    renderChart('bar', weeksIssueEventsHistogramContext, weeksIssueEventsLabels, weeksIssueEventsHistogramDatasets, {});
    renderChart('line', weeksIssueEventsAvgAndMedContext, weeksIssueEventsLabels, weeksIssueEventsAvgAndMedDatasets, options);
    renderChart('line', monthsCumulativeIssuesContext, monthsCumulativeIssuesLabels, monthsCumulativeIssuesDatasets, {});
    renderChart('line', weeksCumulativeIssuesContext, weeksCumulativeIssuesLabels, weeksCumulativeIssuesDatasets, {});
    renderChart('doughnut', aggregatedIssuesContext, aggregatedIssuesChartLabels, aggregatedIssuesChartDatasets, {});
